{"remainingRequest":"/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/node_modules/babel-loader/lib/index.js!/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/src/store/index.js","dependencies":[{"path":"/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/src/store/index.js","mtime":1597869370906},{"path":"/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.index-of\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\n/*\n * The authorization header is set for axios when you login but what happens when you come back or\n * the page is refreshed. When that happens you need to check for the token in local storage and if it\n * exists you should set the header so that it will be attached to each request\n */\n\nvar currentToken = localStorage.getItem('token');\nvar currentUser = JSON.parse(localStorage.getItem('user'));\n\nif (currentToken != null) {\n  axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(currentToken);\n}\n\nexport default new Vuex.Store({\n  state: {\n    token: currentToken || '',\n    user: currentUser || {},\n    cart: [],\n    cartItems: []\n  },\n  mutations: {\n    SET_AUTH_TOKEN: function SET_AUTH_TOKEN(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(token);\n    },\n    SET_USER: function SET_USER(state, user) {\n      state.user = user;\n      localStorage.setItem('user', JSON.stringify(user));\n    },\n    LOGOUT: function LOGOUT(state) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      state.token = '';\n      state.user = {};\n      axios.defaults.headers.common = {};\n    },\n    SET_SELECTED_CATEGORY: function SET_SELECTED_CATEGORY(state, category) {\n      state.category = category;\n    },\n    ADD_TOOL_TO_CART: function ADD_TOOL_TO_CART(state, tool) {\n      state.cart.push(tool);\n    },\n    REMOVE_FROM_CART: function REMOVE_FROM_CART(state, tool) {\n      var index = state.cart.indexOf(tool);\n      state.cart.splice(index, 1);\n    },\n    EMPTY_CART: function EMPTY_CART(state) {\n      state.cart = [];\n    }\n  }\n});",{"version":3,"sources":["/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/src/store/index.js"],"names":["Vue","Vuex","axios","use","currentToken","localStorage","getItem","currentUser","JSON","parse","defaults","headers","common","Store","state","token","user","cart","cartItems","mutations","SET_AUTH_TOKEN","setItem","SET_USER","stringify","LOGOUT","removeItem","SET_SELECTED_CATEGORY","category","ADD_TOOL_TO_CART","tool","push","REMOVE_FROM_CART","index","indexOf","splice","EMPTY_CART"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA;;;;;;AAKA,IAAMG,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,IAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAApB;;AAEA,IAAIF,YAAY,IAAI,IAApB,EAA0B;AACxBF,EAAAA,KAAK,CAACQ,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,qBAA2DR,YAA3D;AACD;;AAED,eAAe,IAAIH,IAAI,CAACY,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEX,YAAY,IAAI,EADlB;AAELY,IAAAA,IAAI,EAAET,WAAW,IAAI,EAFhB;AAGLU,IAAAA,IAAI,EAAE,EAHD;AAILC,IAAAA,SAAS,EAAE;AAJN,GADqB;AAQ5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cADS,0BACMN,KADN,EACaC,KADb,EACoB;AAC3BD,MAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACAV,MAAAA,YAAY,CAACgB,OAAb,CAAqB,OAArB,EAA8BN,KAA9B;AACAb,MAAAA,KAAK,CAACQ,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,qBAA2DG,KAA3D;AACD,KALQ;AAMTO,IAAAA,QANS,oBAMAR,KANA,EAMOE,IANP,EAMa;AACpBF,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACAX,MAAAA,YAAY,CAACgB,OAAb,CAAqB,MAArB,EAA6Bb,IAAI,CAACe,SAAL,CAAeP,IAAf,CAA7B;AACD,KATQ;AAUTQ,IAAAA,MAVS,kBAUFV,KAVE,EAUK;AACZT,MAAAA,YAAY,CAACoB,UAAb,CAAwB,OAAxB;AACApB,MAAAA,YAAY,CAACoB,UAAb,CAAwB,MAAxB;AACAX,MAAAA,KAAK,CAACC,KAAN,GAAc,EAAd;AACAD,MAAAA,KAAK,CAACE,IAAN,GAAa,EAAb;AACAd,MAAAA,KAAK,CAACQ,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,GAAgC,EAAhC;AACD,KAhBQ;AAiBTc,IAAAA,qBAjBS,iCAiBaZ,KAjBb,EAiBoBa,QAjBpB,EAiB8B;AACrCb,MAAAA,KAAK,CAACa,QAAN,GAAiBA,QAAjB;AACD,KAnBQ;AAqBTC,IAAAA,gBArBS,4BAqBQd,KArBR,EAqBee,IArBf,EAqBqB;AAC5Bf,MAAAA,KAAK,CAACG,IAAN,CAAWa,IAAX,CAAgBD,IAAhB;AACD,KAvBQ;AAyBTE,IAAAA,gBAzBS,4BAyBQjB,KAzBR,EAyBee,IAzBf,EAyBoB;AAC3B,UAAIG,KAAK,GAAGlB,KAAK,CAACG,IAAN,CAAWgB,OAAX,CAAmBJ,IAAnB,CAAZ;AACAf,MAAAA,KAAK,CAACG,IAAN,CAAWiB,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB;AACD,KA5BQ;AA6BTG,IAAAA,UA7BS,sBA6BErB,KA7BF,EA6BS;AAChBA,MAAAA,KAAK,CAACG,IAAN,GAAa,EAAb;AACD;AA/BQ;AARiB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\nVue.use(Vuex)\n\n/*\n * The authorization header is set for axios when you login but what happens when you come back or\n * the page is refreshed. When that happens you need to check for the token in local storage and if it\n * exists you should set the header so that it will be attached to each request\n */\nconst currentToken = localStorage.getItem('token')\nconst currentUser = JSON.parse(localStorage.getItem('user'));\n\nif (currentToken != null) {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${currentToken}`;\n}\n\nexport default new Vuex.Store({\n  state: {\n    token: currentToken || '',\n    user: currentUser || {},\n    cart: [],\n    cartItems: []\n    \n  },\n  mutations: {\n    SET_AUTH_TOKEN(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n    },\n    SET_USER(state, user) {\n      state.user = user;\n      localStorage.setItem('user', JSON.stringify(user));\n    },\n    LOGOUT(state) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      state.token = '';\n      state.user = {};\n      axios.defaults.headers.common = {};\n    },\n    SET_SELECTED_CATEGORY(state, category) {\n      state.category = category;\n    },\n\n    ADD_TOOL_TO_CART(state, tool) {\n      state.cart.push(tool);\n    },\n\n    REMOVE_FROM_CART(state, tool){\n      let index = state.cart.indexOf(tool);\n      state.cart.splice(index, 1);\n    },\n    EMPTY_CART(state) {\n      state.cart = [];\n    }\n\n\n\n  }\n})\n"]}]}