{"remainingRequest":"/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/node_modules/babel-loader/lib/index.js!/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/src/router/index.js","dependencies":[{"path":"/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/src/router/index.js","mtime":1597869370904},{"path":"/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.some\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from \"../views/Home.vue\";\nimport Login from \"../views/Login.vue\";\nimport Logout from \"../views/Logout.vue\";\nimport Register from \"../views/Register.vue\";\nimport ShoppingCart from \"../views/ShoppingCart.vue\";\nimport store from \"../store/index\";\nimport UserTools from \"../views/UserTools.vue\";\nimport ToolsCheckedOut from \"../views/ToolsCheckedOut\";\nimport VueRouter from 'vue-router';\nimport Profile from \"../views/Profile.vue\";\nVue.use(Router);\nVue.use(VueRouter);\n/**\n * The Vue Router is used to \"direct\" the browser to render a specific view component\n * inside of App.vue depending on the URL.\n *\n * It also is used to detect whether or not a route requires the user to have first authenticated.\n * If the user has not yet authenticated (and needs to) they are redirected to /login\n * If they have (or don't need to) they're allowed to go about their way.\n */\n\nvar router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'home',\n    component: Home,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"/login\",\n    name: \"login\",\n    component: Login,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/logout\",\n    name: \"logout\",\n    component: Logout,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: \"/register\",\n    name: \"register\",\n    component: Register,\n    meta: {\n      requiresAuth: false\n    }\n  }, {\n    path: '/shoppingcart',\n    name: 'cart',\n    component: ShoppingCart,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/mytools',\n    name: 'mytools',\n    component: UserTools,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/checkedout',\n    name: 'checkedouttools',\n    component: ToolsCheckedOut,\n    meta: {\n      requiresAuth: true,\n      role: true\n    }\n  }, {\n    path: '/profile',\n    name: 'userprofile',\n    component: Profile,\n    meta: {\n      requiresAuth: true,\n      role: true\n    }\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  // Determine if the route requires Authentication\n  var requiresAuth = to.matched.some(function (x) {\n    return x.meta.requiresAuth;\n  }); // If it does and they are not logged in, send the user to \"/login\"\n\n  if (requiresAuth && store.state.token === '') {\n    next(\"/login\");\n  } else {\n    // Else let them go to their next destination\n    next();\n  }\n});\nexport default router;",{"version":3,"sources":["/Users/matt/Desktop/Cap/Tech-Elevator-Projects/team-echo-java-blue-capstone/vue/src/router/index.js"],"names":["Vue","Router","Home","Login","Logout","Register","ShoppingCart","store","UserTools","ToolsCheckedOut","VueRouter","Profile","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","role","beforeEach","to","from","next","matched","some","x","state","token"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport Home from '../views/Home.vue'\nimport Login from '../views/Login.vue'\nimport Logout from '../views/Logout.vue'\nimport Register from '../views/Register.vue'\nimport ShoppingCart from '../views/ShoppingCart.vue'\nimport store from '../store/index'\nimport UserTools from '../views/UserTools.vue'\nimport ToolsCheckedOut from '../views/ToolsCheckedOut'\nimport VueRouter from 'vue-router';\nimport Profile from '../views/Profile.vue';\n\n\nVue.use(Router)\nVue.use(VueRouter);\n\n\n\n/**\n * The Vue Router is used to \"direct\" the browser to render a specific view component\n * inside of App.vue depending on the URL.\n *\n * It also is used to detect whether or not a route requires the user to have first authenticated.\n * If the user has not yet authenticated (and needs to) they are redirected to /login\n * If they have (or don't need to) they're allowed to go about their way.\n */\n\nconst router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n      component: Home,\n      meta: {\n        requiresAuth: true\n      }\n    },\n    {\n      path: \"/login\",\n      name: \"login\",\n      component: Login,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/logout\",\n      name: \"logout\",\n      component: Logout,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: \"/register\",\n      name: \"register\",\n      component: Register,\n      meta: {\n        requiresAuth: false\n      }\n    },\n    {\n      path: '/shoppingcart',\n      name: 'cart',\n      component: ShoppingCart,\n      meta: {\n        requiresAuth: true\n      }\n   },\n   {\n    path: '/mytools',\n    name: 'mytools',\n    component: UserTools,\n    meta: {\n      requiresAuth: true\n    }\n },\n {\n  path: '/checkedout',\n  name: 'checkedouttools',\n  component: ToolsCheckedOut,\n  meta: {\n    requiresAuth: true,\n    role : true\n  \n  }\n  \n  \n },\n {\npath:'/profile',\nname: 'userprofile',\ncomponent: Profile,\nmeta: {\n  requiresAuth: true,\n  role : true\n\n}\n }\n\n  ]\n})\n\nrouter.beforeEach((to, from, next) => {\n  // Determine if the route requires Authentication\n  const requiresAuth = to.matched.some(x => x.meta.requiresAuth);\n\n  // If it does and they are not logged in, send the user to \"/login\"\n  if (requiresAuth && store.state.token === '') {\n    next(\"/login\");\n  } else {\n    // Else let them go to their next destination\n    next();\n  }\n});\n\nexport default router;\n"]}]}